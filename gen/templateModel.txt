module.exports = async function (_this, opts) {
    _this.models.{{model}} = class {
        constructor() {
            this.name = '{{name}}'
            const { knex } = _this
            this.knex = knex
        }
        create (params = {}, trx) {
            const query = this.knex(this.name).insert(params).returning([{{returning}}])
            if (trx) {
                query.transacting(trx)
            }
            return query
        }
        read (fields = [], trx) {
            const query = this.knex(this.name).select(fields)
            if (trx) {
                query.transacting(trx)
            }
            return query
        }
        readById ({{params}}, fields = [], trx) {
            const query = this.knex(this.name).select(fields).where({{paramsData}}).first()
            if (trx) {
                query.transacting(trx)
            }
            return query
        }
        update ({{params}}, params, trx) {
            const query = this.knex(this.name).update(params).where({{paramsData}})
            if (trx) {
                query.transacting(trx)
            }
            return query
        }
        delete ({{params}}, trx) {
            const query = this.knex(this.name).where({{paramsData}}).del()
            if (trx) {
                query.transacting(trx)
            }
            return query
        }
    }
}